using System.Collections;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using UnityEngine;

public class NaverMap : MonoBehaviour
{
    public static NaverMap Instance
    {
        get
        {
            if(m_instance == null)
            {
                m_instance = FindObjectOfType<NaverMap>();
            }

            return m_instance;
        }
    }
    private static NaverMap m_instance;

    private string geocodeAPIUrl = "https://naveropenapi.apigw.ntruss.com/map-geocode/v2/geocode";
    private string staticMapAPIUrl = "https://naveropenapi.apigw.ntruss.com/map-static/v2/raster?w=300&h=300&center=127.1054221,37.3591614&level=16";
    private string clientID = "m43fqgqgf6";
    private string clientSecret = "MPaASwSsykcbLnaIyfjLUl5vzsvsEIA3Lrzp8mZV";

    private static readonly HttpClient client = new HttpClient();

    private void Awake()
    {
        if(Instance != this)
        {
            Destroy(gameObject);
        }
        DontDestroyOnLoad(gameObject);
    }

    public async Task GetAddress(float _latitude, float _longitude)
    {
        /*
         * 네이버 Reverse Geocoding 사용 가이드
         * curl "https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc?request=coordsToaddr&
         *      coords={입력_좌표}&sourcecrs={좌표계}&orders={변환_작업_이름}&output={출력_형식}"
	     *   -H "X-NCP-APIGW-API-KEY-ID: {애플리케이션 등록 시 발급받은 client id값}" \
	     *   -H "X-NCP-APIGW-API-KEY: {애플리케이션 등록 시 발급받은 client secret값}" -v
	     *   
         * 필수 파라미터
         * coords(string)(경도,위도)
         *
         * 필요 파라미터
         * orders = "roadaddr" (도로명 주소 요청)
         * output = "json" (json 형식 출력)
         */

        string coords = $"{_longitude},{_latitude}"; // 위도, 경도
        string sourceCrs = "epsg:4326"; // 위경도 좌표계(기본값, 4326)
        string orders = "roadaddr";
        string output = "json";

        string url = $"https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc?request=coordsToaddr&coords={coords}&sourcecrs={sourceCrs}&orders={orders}&output={output}";

        client.DefaultRequestHeaders.Add("X-NCP-APIGW-API-KEY-ID", clientID);
        client.DefaultRequestHeaders.Add("X-NCP-APIGW-API-KEY", clientSecret);

        HttpResponseMessage response = await client.GetAsync(url);

        if(response.IsSuccessStatusCode)
        {
            string resposeBody = await response.Content.ReadAsStringAsync();
            ParsingAddress(resposeBody);
        }
        else
        {
            Debug.Log($"Error: {response.StatusCode}");
        }
    }

    private void ParsingAddress(string _json)
    {
        Memo memo = new Memo();
    }
}
